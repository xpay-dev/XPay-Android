apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
kapt {
    generateStubs = true
}
ext {
    majorVersion = "1"
    minorVersion = "0"
    patchVersion = "0"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    defaultConfig {

        applicationId "com.xpayworld.payment"
        minSdkVersion 21
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        versionCode(getDate() as Integer)
        versionName "${majorVersion}.${minorVersion}.${patchVersion} build ${versionCode}"

        buildConfigField 'String', 'VERSION_APP', "\"${majorVersion}.${minorVersion}.${patchVersion}\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '-dev'
        }
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.

            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            debuggable false
            minifyEnabled true

            zipAlignEnabled true
            applicationIdSuffix '.release'
            versionNameSuffix ''

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0-beta01'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta3'
    implementation 'com.google.android.material:material:1.2.0-alpha01'

    implementation 'androidx.fragment:fragment-ktx:1.2.0-rc01'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.0-rc01'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.0-rc01'


    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc01'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-rc01'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel Kotlin support
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc01'

    // Room components
    kapt 'androidx.room:room-compiler:2.2.1'
    implementation "androidx.room:room-runtime:2.2.1"
    implementation "androidx.room:room-ktx:2.2.1"
    implementation "androidx.work:work-runtime-ktx:2.2.0"
    androidTestImplementation "androidx.room:room-testing:2.2.0"


    // reactive
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
//  implementation 'com.jakewharton.rxbinding3:rxbinding-material:3.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'

    implementation 'com.squareup.retrofit2:converter-moshi:2.6.2'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    // Gson
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    // 字符串
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.2'
    // RxJava
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // lean back
    implementation 'androidx.leanback:leanback:1.1.0-alpha02'
    implementation 'androidx.leanback:leanback-preference:1.1.0-alpha02'

    // dependency injection
    implementation 'com.google.dagger:dagger:2.24'
    implementation 'com.google.dagger:dagger-android-support:2.24'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    kapt 'com.google.dagger:dagger-android-processor:2.24'

    // network
    implementation 'com.amitshekhar.android:rx2-android-networking:1.0.2'

    // Signature
    implementation 'com.kyanogen.signatureview:signature-view:1.2'

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"


    implementation files('libs/ksoap2-android-assembly-2.4-jar-with-dependencies.jar')
    implementation files('libs/acra-4.7.0.jar')

    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'

    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.2.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-rc01'
    implementation project(path: ':xpaysdk')
    implementation files('libs/bbdevice-android-3.7.1.jar')
    implementation files('libs/bbdeviceotaapi-android-1.6.1.jar')
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHH')
    return formattedDate.toLong()
}